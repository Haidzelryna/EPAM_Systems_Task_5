
@using DevExtreme.AspNet.Mvc

@model IEnumerable<Contact>

@{
    ViewBag.Title = "Contacts";
}

<h2>Contacts List</h2>

<script src="https://unpkg.com/devextreme-aspnet-data/js/dx.aspnet.data.js"></script>

@(Html.DevExtreme().DataGrid<Contact>()
                    .ID("gridContainerContacts")

                    .DataSource(   d => d.Mvc().Controller("ContactsMVC").Key("Id")
                                    .LoadAction("Get")
                                    .InsertAction("Post")
                                    .UpdateAction("Put")
                                    .DeleteAction("Delete")
                                    .LoadMode(DataSourceLoadMode.Raw))

                    .ShowBorders(true)

                    .Selection(s => s.Mode(SelectionMode.Single))

                    .Editing(e => e
                        .Mode(GridEditMode.Popup)
                        .AllowAdding(true)
                        .AllowDeleting(true)
                        .AllowUpdating(true)
                    )

                    .SearchPanel(searchPanel => searchPanel
                        .Visible(true)
                        .Width(240)
                        .Placeholder("Search...")
                    )

                    .Paging(p => p.PageSize(10))

                    .Pager(p => p
                        .ShowPageSizeSelector(true)
                        .AllowedPageSizes(new[] { 10, 25, 50, 100 })
                    )

                    .HeaderFilter(headerFilter => headerFilter.Visible(true))

                      .FilterRow(filterRow => filterRow
                        .Visible(true)
                        .ApplyFilter(GridApplyFilterMode.Auto)
                    )

                    .FilterPanel(filterPanel => filterPanel.Visible(true))

                    .AllowColumnReordering(true)
                    .AllowColumnResizing(true)
                    .ColumnAutoWidth(true)
                    .ShowBorders(true)
                    .ColumnChooser(c => c.Enabled(true))
                    .ColumnFixing(c => c.Enabled(true))

                    .Columns(columns =>
                    {
                        columns.AddFor(m => m.FirstName);
                        columns.AddFor(m => m.MiddleName);
                        columns.AddFor(m => m.LastName);
                        columns.AddFor(m => m.Phone)
                        .Caption("Mobile Phone");
                        columns.AddFor(m => m.Email);
                    })

                    .OnContentReady("addIndexColumns")
)

@(Html.DevExtreme().Button()
        .Text("Refresh Grid")
        .OnClick("reloadData")
)

<script type="text/javascript">

    function reloadData() {
        $("#gridContainerContacts").dxDataGrid("getDataSource").reload();
    }

    var addIndexColumns = function (e) {
        if (!e.component.columnOption("№"))
            e.component.addColumn({
                caption: "№",
                visibleIndex: 0,
                width: 60,
                cellTemplate: function (cellElement, cellInfo) {
                    cellElement.append($("<div>").text(cellInfo.rowIndex + 1))
                }
            })
    }


    function getCountryWithCapital(rowData) {
        return rowData.capital + " (" + rowData.country + ")";
    }


</script>