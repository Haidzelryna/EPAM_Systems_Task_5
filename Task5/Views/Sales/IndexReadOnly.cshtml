
@using DevExtreme.AspNet.Mvc

@model IEnumerable<Sale>

@{
    ViewBag.Title = "Sales";
}

<h2>Sales List</h2>

<script src="https://unpkg.com/devextreme-aspnet-data/js/dx.aspnet.data.js"></script>

@(Html.DevExtreme().DataGrid<Sale>
                ()
                .ID("gridContainerSales")

                .DataSource(d => d.Mvc().Controller("SalesMVC").Key("Id")
                    .LoadAction("Get")
                    .LoadMode(DataSourceLoadMode.Processed))

                .RemoteOperations(true)

                .ShowBorders(true)

                .Selection(s => s.Mode(SelectionMode.Single))

                .SearchPanel(searchPanel => searchPanel
                .Visible(true)
                .Width(240)
                .Placeholder("Search..."))

                .Paging(p => p.PageSize(10))

                .Pager(p => p
                .ShowPageSizeSelector(true)
                .AllowedPageSizes(new[] { 10, 25, 50, 100 }))

                .HeaderFilter(headerFilter => headerFilter.Visible(true))

                .FilterPanel(filterPanel => filterPanel.Visible(true))

                .FilterRow(filterRow => filterRow
                .Visible(true)
                .ApplyFilter(GridApplyFilterMode.Auto))

                .AllowColumnReordering(true)
                .AllowColumnResizing(true)
                .ColumnAutoWidth(true)
                .ShowBorders(true)
                .ColumnChooser(c => c.Enabled(true))
                .ColumnFixing(c => c.Enabled(true))

                .Columns(columns =>
                {
                    columns.Add()
                        .DataField("Date")
                        .DataType(GridColumnDataType.Date)
                        .Format(Format.ShortDate);
                    columns.AddFor(m => m.Sum);
                    columns.Add()
                    .DataField("ClientId")
                    .Caption("Client")
                    .Width(125)
                    .Lookup(lookup => lookup
                    .DataSource(d => d.Mvc().Controller("ClientsMVC").Key("Id").LoadAction("Get"))
                    .DisplayExpr("Name")
                    .ValueExpr("Id"));
                    columns.Add()
                        .DataField("ProductId")
                        .Caption("Product")
                        .Width(125)
                        .Lookup(lookup => lookup
                        .DataSource(d => d.Mvc().Controller("ProductsMVC").Key("Id").LoadAction("Get"))
                        .DisplayExpr("Name")
                        .ValueExpr("Id"));
                    columns.Add()
                        .DataField("CreatedByUserId")
                        .Caption("Manager")
                        .Width(125)
                        .Lookup(lookup => lookup
                        .DataSource(d => d.Mvc().Controller("ManagersMVC").Key("Id").LoadAction("Get"))
                        .DisplayExpr("Name")
                        .ValueExpr("Id"));
                })

                .OnContentReady("addIndexColumns")
)

@(Html.DevExtreme().Button()
        .Text("Refresh Grid")
        .OnClick("reloadData2")
)

<section>
    <div id="chart_div">
        @Html.Partial("SalesChart", Model)
    </div>
</section>


<script type="text/javascript">

    function reloadData2()
    {
        $("#gridContainerSales").dxDataGrid("getDataSource").reload();
    }

    var addIndexColumns = function (e)
    {
        if (!e.component.columnOption("№"))
            e.component.addColumn(
            {
                caption: "№",
                visibleIndex: 0,
                width: 60,
                cellTemplate: function (cellElement, cellInfo)
                {
                    cellElement.append($("<div>").text(cellInfo.rowIndex + 1))
                }
            })
    }

</script>




