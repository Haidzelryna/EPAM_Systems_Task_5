@using DevExtreme.AspNet.Mvc

@model IEnumerable<Task5.Models.Sale>

@{
    ViewBag.Title = "Sales";
}

<h2>Sales List</h2>


<script src = "https://unpkg.com/devextreme-aspnet-data/js/dx.aspnet.data.js"> </script >


@*<script type="text/javascript" src="~/Scripts/aspnet/dx.aspnet.mvc.js"></script>
    <script type="text/javascript" src="~/Scripts/aspnet/dx.aspnet.data.js"></script>*@

@*@Scripts.Render("~/Scripts/dx.viz.js")*@

@*@{scriptBundle
    .Include("~/Scripts/dx.viz.js")
    .Include("~/Scripts/aspnet/dx.aspnet.data.js")
    .Include("~/Scripts/aspnet/dx.aspnet.mvc.js"); }*@

@(Html.DevExtreme().DataGrid<Task5.Models.Sale>
                            ()
                            .ID("gridContainerSales")

                             //.DataSource(Model)

                             .DataSource(d => d.WebApi().RouteName("SalesWebApi").LoadAction("Get").Key("Id"))

                            //.DataSource(ds => ds.WebApi()
                            //    //.RouteName("SalesWebApi")
                            //    .LoadMethod("api/SalesWebApi/Get")
                            //    .LoadAction("Get")
                            //    .InsertAction("Post")
                            //    .UpdateAction("Put")
                            //    .DeleteAction("Delete")
                            //    .Key("Id"))

                            //.DataSource(d => d.Mvc().Controller("SalesWebApi").Key("Id").LoadAction("Get"))

                            .RemoteOperations(true)

                            .ShowBorders(true)

                            .Selection(s => s.Mode(SelectionMode.Single))

                            .Editing(e => e
                            .Mode(GridEditMode.Form)
                            .AllowAdding(true)
                            .AllowDeleting(true)
                            .AllowUpdating(true)
                            )

                            .SearchPanel(searchPanel => searchPanel
                            .Visible(true)
                            .Width(240)
                            .Placeholder("Search..."))

                            .Paging(p => p.PageSize(10))

                            .Pager(p => p
                            .ShowPageSizeSelector(true)
                            .AllowedPageSizes(new[] { 10, 25, 50, 100 }))

                            .HeaderFilter(headerFilter => headerFilter.Visible(true))

                            .FilterRow(filterRow => filterRow
                            .Visible(true)
                            .ApplyFilter(GridApplyFilterMode.Auto))

                            .AllowColumnReordering(true)
                            .AllowColumnResizing(true)
                            .ColumnAutoWidth(true)
                            .ShowBorders(true)
                            .ColumnChooser(c => c.Enabled(true))
                            .ColumnFixing(c => c.Enabled(true))

                            .Columns(columns =>
                            {
                                columns.AddFor(m => m.Date);
                                columns.AddFor(m => m.Client)
                                .Width(125)
                                .Lookup(lookup => lookup
                                //.DataSource(d => d.WebApi().Controller("SalesWebApi").LoadAction("ClientLookup").Key("Id"))
                                .DisplayExpr("Name")
                                .ValueExpr("Id"));
                                columns.AddFor(m => m.ProductName);
                                columns.AddFor(m => m.Sum);
                            }

                            )
)

@*@(Html.DevExtreme().Button()
                                        .Text("Refresh Grid")
                                        .OnClick("reloadData")
    )

    <script type="text/javascript">
        function reloadData() {
            $("#gridContainerSales").dxDataGrid("getDataSource").reload();
        }
    </script>*@




