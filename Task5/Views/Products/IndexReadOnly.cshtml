
@using DevExtreme.AspNet.Mvc

@model IEnumerable<Product>

@{
    ViewBag.Title = "Products";
}

<h2>Products List</h2>

<script src="https://unpkg.com/devextreme-aspnet-data/js/dx.aspnet.data.js"></script>

@(Html.DevExtreme().DataGrid<Product>()
        .ID("gridContainerProducts")

        .DataSource(d => d.Mvc().Controller("ProductsMVC").Key("Id")
            .LoadAction("Get")
            .LoadMode(DataSourceLoadMode.Processed))

        .ShowBorders(true)

        .Selection(s => s.Mode(SelectionMode.Single))

        .SearchPanel(searchPanel => searchPanel
            .Visible(true)
            .Width(240)
            .Placeholder("Search...")
        )

        .Paging(p => p.PageSize(10))

        .Pager(p => p
            .ShowPageSizeSelector(true)
            .AllowedPageSizes(new[] { 10, 25, 50, 100 })
        )

        .HeaderFilter(headerFilter => headerFilter.Visible(true))

            .FilterRow(filterRow => filterRow
            .Visible(true)
            .ApplyFilter(GridApplyFilterMode.Auto)
        )

        .FilterPanel(filterPanel => filterPanel.Visible(true))

        .AllowColumnReordering(true)
        .AllowColumnResizing(true)
        .ColumnAutoWidth(true)
        .ShowBorders(true)
        .ColumnChooser(c => c.Enabled(true))
        .ColumnFixing(c => c.Enabled(true))

        .Columns(columns =>
        {
            columns.AddFor(m => m.Name);
            columns.AddFor(m => m.Price);
        })

        .OnContentReady("addIndexColumns")
)

@(Html.DevExtreme().Button()
        .Text("Refresh Grid")
        .OnClick("reloadData")
)

    
<script type="text/javascript">

    function reloadData() {
        $("#gridContainerProducts").dxDataGrid("getDataSource").reload();
    }

    var addIndexColumns = function (e) {
        if (!e.component.columnOption("№"))
            e.component.addColumn({
                caption: "№",
                visibleIndex: 0,
                width: 60,
                cellTemplate: function (cellElement, cellInfo) {
                cellElement.append($("<div>").text(cellInfo.rowIndex + 1))
                }
            })
    }

</script>